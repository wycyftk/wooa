<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wo.ms.oa.dao.OaFlowMapper">
  <resultMap id="BaseResultMap" type="com.wo.ms.oa.entity.OaFlow">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="approval_id" jdbcType="INTEGER" property="approvalId" />
    <result column="flow_name" jdbcType="VARCHAR" property="flowName" />
    <result column="launch_name" jdbcType="VARCHAR" property="launchName" />
    <result column="approval_name" jdbcType="VARCHAR" property="approvalName" />
    <result column="launch_id" jdbcType="INTEGER" property="launchId" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="opinion" jdbcType="INTEGER" property="opinion" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_id, create_time, update_id, update_time, approval_id, flow_name, launch_name,
    approval_name, launch_id, note, status, opinion
  </sql>
  <sql id="Mul_Column_List">
    ${alias}.id, ${alias}.create_id, ${alias}.create_time, ${alias}.update_id, ${alias}.update_time, ${alias}.approval_id, ${alias}.flow_name, ${alias}.launch_name,
    ${alias}.approval_name, ${alias}.launch_id, ${alias}.note, ${alias}.status, ${alias}.opinion
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oa_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectFlowByKeyLimit" resultType="java.util.Map">
    SELECT * FROM (
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.use_car_record_id HAVING MAX(oa_flow.create_time)
    UNION
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.meeting_id HAVING MAX(oa_flow.create_time)) AS r
    ORDER BY r.update_time
    limit #{start, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
  </select>
  <select id="selectFlowByKey" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM (
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.use_car_record_id HAVING MAX(oa_flow.create_time)
    UNION
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.meeting_id HAVING MAX(oa_flow.create_time)) AS r
  </select>
  <select id="selectFlowByKeyLimitTodo" resultType="java.util.Map">
    SELECT * FROM (
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.use_car_record_id HAVING MAX(oa_flow.create_time)
    UNION
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.meeting_id HAVING MAX(oa_flow.create_time)) AS r
    ORDER BY r.update_time
    limit #{start, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
  </select>
  <select id="selectFlowByKeyTodo" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM (
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.use_car_record_id HAVING MAX(oa_flow.create_time)
    UNION
    SELECT * FROM oa_flow LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    <trim prefix="where" prefixOverrides="AND " suffix="">
      <if test="key != null">
        AND concat_ws(",", oa_flow.flow_name, oa_flow.launch_name, oa_flow.approval_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
      </if>
      <if test="loginId != null">
        AND oa_flow.launch_id = #{loginId, jdbcType=INTEGER}
      </if>
    </trim>
    GROUP BY fcm.meeting_id HAVING MAX(oa_flow.create_time)) AS r
  </select>
  <select id="selectFlowByKeyLimitByStatus" resultMap="BaseResultMap">
    SELECT <include refid="Mul_Column_List" ><property name="alias" value="flow"></property></include>
    FROM oa_flow AS flow
    LEFT JOIN flow_car_meeting AS fcm ON fcm.flow_id = flow.id
    WHERE flow.status = #{status, jdbcType=INTEGER} AND flow.approval_id IS NULL
    <if test="key != null">
      AND concat_ws(',', flow_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
    </if>
    GROUP BY fcm.meeting_id HAVING MAX(flow.create_time)
  </select>
  <select id="selectFlowByKeyLimitByOrgIds" resultMap="BaseResultMap">
    SELECT 
    <include refid="Mul_Column_List" ><property name="alias" value="flow"></property></include>
    FROM oa_flow AS flow
    LEFT JOIN flow_car_meeting AS fcm ON fcm.flow_id = flow.id
    LEFT JOIN user_org AS uo ON uo.user_id = flow.launch_id
    WHERE flow.status = 3 AND flow.approval_id IS NULL AND uo.user_id = flow.launch_id
    AND uo.org_id IN
    <foreach collection="orgIds" item="item" open="(" close=")" separator=",">
      #{item, jdbcType=INTEGER}
    </foreach>
    <if test="key != null">
      AND concat_ws(',', flow_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
    </if>
    GROUP BY fcm.meeting_id HAVING MAX(flow.create_time)
  </select>
  <select id="selectCarFlowById" resultType="java.util.Map">
    SELECT * FROM
	oa_flow
    LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    LEFT JOIN use_car_record AS ucr ON ucr.id = fcm.use_car_record_id
    WHERE oa_flow.id = #{flowId, jdbcType=INTEGER} AND fcm.use_car_record_id <![CDATA[<>]]> 0
  </select>
  <select id="selectMeetingFlowById" resultType="java.util.Map">
    SELECT * FROM
    oa_flow
    LEFT JOIN flow_car_meeting AS fcm ON oa_flow.id = fcm.flow_id
    LEFT JOIN oa_meeting AS om ON om.id = fcm.meeting_id
    WHERE oa_flow.id = #{flowId, jdbcType=INTEGER} AND fcm.meeting_id <![CDATA[<>]]> 0
  </select>
  <select id="selectCompleteFlowByKeyLimit" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"><property name="alis" value="flow"></property></include>
    FROM oa_flow AS flow
    WHERE approval_id = #{loginId, jdbcType=INTEGER}
    <if test="key != null">
      AND concat_ws(",", flow_name, launch_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
    </if>
    ORDER BY create_time DESC
    limit #{start, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
  </select>
  <select id="selectCompleteFlowByKey" resultType="java.lang.Integer">
    SELECT
      count(*)
    FROM oa_flow AS flow
    WHERE approval_id = #{loginId, jdbcType=INTEGER}
    <if test="key != null">
      AND concat_ws(",", flow_name, launch_name) LIKE '%' #{key, jdbcType=VARCHAR} '%'
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oa_flow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteFlow">
    DELETE FROM oa_flow WHERE id in
    ( SELECT r.id FROM
      (SELECT f.id AS id from oa_flow AS f LEFT JOIN flow_car_meeting AS fcm ON f.id = fcm.flow_id
         WHERE
          <if test="type == 'car'">fcm.use_car_record_id = #{id, jdbcType=INTEGER}</if>
          <if test="type == 'meeting'">fcm.meeting_id = #{id, jdbcType=INTEGER}</if>
      ) AS r
    );
    DELETE FROM flow_car_meeting WHERE
    <if test="type == 'car'">use_car_record_id = #{id, jdbcType=INTEGER}</if>
    <if test="type == 'meeting'">meeting_id = #{id, jdbcType=INTEGER}</if>;

  </delete>
  <insert id="addFlowCarMeeting" parameterType="com.wo.ms.oa.entity.FlowCarMeeting">
    INSERT INTO flow_car_meeting (use_car_record_id, flow_id, meeting_id)
    VALUES (#{useCarRecordId, jdbcType=INTEGER}, #{flowId, jdbcType=INTEGER}, #{meetingId, jdbcType=INTEGER})
  </insert>
  <insert id="insert" parameterType="com.wo.ms.oa.entity.OaFlow" useGeneratedKeys="true" keyProperty="id">
    insert into oa_flow (id, create_id, create_time,
      update_id, update_time, approval_id, 
      flow_name, launch_name, approval_name, launch_id, note, status, opinion)
    values (#{id,jdbcType=INTEGER}, #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{approvalId,jdbcType=INTEGER}, 
      #{flowName,jdbcType=VARCHAR}, #{launchName,jdbcType=VARCHAR},#{approvalName,jdbcType=VARCHAR},
      #{launchId,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{opinion, jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wo.ms.oa.entity.OaFlow">
    update oa_flow
    <set>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalId != null">
        approval_id = #{approvalId,jdbcType=INTEGER},
      </if>
      <if test="flowName != null">
        flow_name = #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="launchId != null">
        launch_id = #{launchId,jdbcType=INTEGER},
      </if>
      <if test="approvalName != null">
        approval_name = #{approvalName,jdbcType=VARCHAR},
      </if>
      <if test="launchName != null">
        launch_name = #{launchName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>